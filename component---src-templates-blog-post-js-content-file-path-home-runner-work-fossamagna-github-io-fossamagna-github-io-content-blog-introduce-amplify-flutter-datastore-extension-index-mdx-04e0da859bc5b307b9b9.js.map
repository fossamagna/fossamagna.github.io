{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-fossamagna-github-io-fossamagna-github-io-content-blog-introduce-amplify-flutter-datastore-extension-index-mdx-04e0da859bc5b307b9b9.js","mappings":"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","sources":["webpack://fossamagna.github.io/./content/blog/introduce-amplify-flutter-datastore-extension/index.mdx","webpack://fossamagna.github.io/./src/templates/blog-post.js","webpack://fossamagna.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"この記事は \", React.createElement(_components.a, {\n    href: \"https://qiita.com/advent-calendar/2023/amplify\"\n  }, \"AWS Amplify と AWS× フロントエンド #AWSAmplifyJP Advent Calendar 2023\"), \"、\", React.createElement(_components.a, {\n    href: \"https://qiita.com/advent-calendar/2023/aws-community-builders\"\n  }, \"AWS Community Builders Advent Calendar 2023\"), \" の 6 日目の記事です。\"), \"\\n\", React.createElement(_components.p, null, \"最近、Amplify & Flutter でモバイルアプリ開発をしています。\\n\", React.createElement(_components.a, {\n    href: \"https://docs.amplify.aws/flutter/build-a-backend/more-features/datastore/\"\n  }, \"Amplify DataStore\"), \" を使っているのですが、Amplify DataStore ってもう少し使いやすい API があるといいなと思っていました。\"), \"\\n\", React.createElement(_components.p, null, \"例えば、次のような \", React.createElement(_components.code, null, \"Todo\"), \" モデルを定義して、ID 指定で単一のレコードを取得する場合、\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\"><pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\"><span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Todo</span> <span class=\\\"token directive function\\\">@model</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token attr-name\\\">id</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token scalar\\\">ID</span><span class=\\\"token operator\\\">!</span>\\n  <span class=\\\"token attr-name\\\">name</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token scalar\\\">String</span><span class=\\\"token operator\\\">!</span>\\n  <span class=\\\"token attr-name\\\">description</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token scalar\\\">String</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"DataStore の API では以下のように書きます。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dart\\\"><pre class=\\\"language-dart\\\"><code class=\\\"language-dart\\\"><span class=\\\"token keyword\\\">final</span> id <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal\\\"><span class=\\\"token string\\\">\\\"080f33bf-0362-4c7f-9dfa-de64fc231dca\\\"</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">final</span> todo <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token class-name\\\">Amplify.DataStore</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">query</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>classType<span class=\\\"token punctuation\\\">,</span>\\n  where<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>MODEL_IDENTIFIER<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">eq</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TodoModelIdentifier</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">:</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>list<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> list<span class=\\\"token punctuation\\\">.</span>single<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ID 指定でレコードを 1 件取得するのにはちょっと、コード量が多いなと思います。\\nID を指定しているので一意に決まるはずですが、DataStore では単一レコードを取得する API 自体がないので \", React.createElement(_components.code, null, \"query\"), \" メソッドで条件にあうレコードをリストで取得してから \", React.createElement(_components.code, null, \"list.single\"), \" のようにしてリストから単一レコードに変換が必要です。\"), \"\\n\", React.createElement(_components.p, null, \"希望としては、以下のように \", React.createElement(_components.code, null, \"getTodo\"), \" のようなメソッドがあると便利だなと思います。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dart\\\"><pre class=\\\"language-dart\\\"><code class=\\\"language-dart\\\"><span class=\\\"token keyword\\\">final</span> id <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal\\\"><span class=\\\"token string\\\">\\\"080f33bf-0362-4c7f-9dfa-de64fc231dca\\\"</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">final</span> todo <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token class-name\\\">Amplify.DataStore</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getTodo</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"一覧画面でリストで表示して、ユーザーの選択に応じてその 1 件を詳細画面で表示するようなケースなどの詳細画面では ID 指定で取得するユースケースはよくあると思います。\"), \"\\n\", React.createElement(_components.p, null, \"そこで、こういったメソッドを生成する \", React.createElement(_components.a, {\n    href: \"https://github.com/fossamagna/amplify-flutter-datastore-extension\"\n  }, \"amplify-flutter-datastore-extension\"), \" という Amplify プラグインを作成しました。\"), \"\\n\", React.createElement(_components.p, null, \"Amplify プラグインなので、以下のように npm でインストールして使います。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> <span class=\\\"token parameter variable\\\">-g</span> amplify-flutter-datastore-extension\\namplify plugin <span class=\\\"token function\\\">add</span> <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span><span class=\\\"token function\\\">npm</span> root <span class=\\\"token parameter variable\\\">-g</span><span class=\\\"token variable\\\">)</span></span>/amplify-flutter-datastore-extension</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"インストールしたら、いつものように通常の Amplify DataStore のモデルコードの生成を実行するだけです。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\">amplify codegen models</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"そうすると\", React.createElement(_components.code, null, \"DataStoreExtension.dart\"), \"というファイルを生成します。\\nファイルは、Amplify.DataStore の extension になっています。\"), \"\\n\", React.createElement(_components.p, null, \"例えば、最初の Todo モデルの場合は以下のような内容でファイルが生成されます。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dart\\\"><pre class=\\\"language-dart\\\"><code class=\\\"language-dart\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token string-literal\\\"><span class=\\\"token string\\\">'ModelProvider.dart'</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string-literal\\\"><span class=\\\"token string\\\">'package:amplify_core/amplify_core.dart'</span></span> <span class=\\\"token operator\\\">as</span> amplify_core<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/** This is an auto generated extension representing the Todo type in your schema. */</span>\\n<span class=\\\"token keyword\\\">extension</span> <span class=\\\"token class-name\\\">TodoExtension</span> <span class=\\\"token keyword\\\">on</span> <span class=\\\"token class-name\\\"><span class=\\\"token namespace\\\">amplify_core<span class=\\\"token punctuation\\\">.</span></span>DataStoreCategory</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token class-name\\\">Future</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">></span></span> <span class=\\\"token function\\\">getTodo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">query</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>classType<span class=\\\"token punctuation\\\">,</span>\\n      where<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>MODEL_IDENTIFIER<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">eq</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TodoModelIdentifier</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">:</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>list<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> list<span class=\\\"token punctuation\\\">.</span>single<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token class-name\\\">Future</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Todo</span><span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">></span></span> <span class=\\\"token function\\\">getTodoOrNull</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">query</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>classType<span class=\\\"token punctuation\\\">,</span>\\n      where<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">Todo</span><span class=\\\"token punctuation\\\">.</span>MODEL_IDENTIFIER<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">eq</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TodoModelIdentifier</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">:</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>list<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> list<span class=\\\"token punctuation\\\">.</span>singleOrNull<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ファイルが生成されたら、以下のような呼び出しが可能になります。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dart\\\"><pre class=\\\"language-dart\\\"><code class=\\\"language-dart\\\"><span class=\\\"token keyword\\\">final</span> id <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal\\\"><span class=\\\"token string\\\">\\\"080f33bf-0362-4c7f-9dfa-de64fc231dca\\\"</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">final</span> todo <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token class-name\\\">Amplify.DataStore</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getTodo</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"コード量も減ってスッキリしたと思います。Flutter で Amplify DataStore を使っている方はぜひ利用してもらいたいと思います。Issue や GitHub スターなどフィードバックをいただけると励みになります。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fossamagna.github.io/fossamagna.github.io/content/blog/introduce-amplify-flutter-datastore-extension/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport {Head as HeaeComponent} from \"../components/head\";\nexport const Head = ({data, ...rest}) => {\n  const post = data.mdx;\n  return React.createElement(HeaeComponent, Object.assign({\n    data: data,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }, rest));\n};\nconst BlogPostTemplate = ({data, location, children}) => {\n  const post = data.mdx;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const {previous, next} = data;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children, React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \" ← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query (\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_createMdxContent","props","_components","Object","assign","p","a","code","div","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","MDXLayout","wrapper","Head","data","rest","post","mdx","HeaeComponent","title","frontmatter","description","excerpt","BlogPostTemplate","location","children","siteTitle","site","siteMetadata","previous","next","Layout","className","itemScope","itemType","itemProp","date","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf"],"sourceRoot":""}