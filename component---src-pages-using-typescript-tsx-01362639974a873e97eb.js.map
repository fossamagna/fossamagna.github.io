{"version":3,"file":"component---src-pages-using-typescript-tsx-01362639974a873e97eb.js","mappings":"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","sources":["webpack://fossamagna.github.io/./src/pages/using-typescript.tsx","webpack://fossamagna.github.io/./src/components/seo.js","webpack://fossamagna.github.io/./src/components/head.js","webpack://fossamagna.github.io/./src/components/layout.js","webpack://fossamagna.github.io/./src/components/speakerdeck.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Head as HeaeComponent } from \"../components/head\"\n\nexport const Head = props => {\n  return <HeaeComponent {...props} title=\"Using TypeScript\"></HeaeComponent>\n}\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Seo = ({ description, title, data, children }) => {\n  const { site } = data\n\n  const metaDescription = description || site.siteMetadata?.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{title ? `${title} | ${defaultTitle}` : defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={metaDescription} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || \"\"}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Seo from \"./seo\"\n\nexport const Head = ({\n  location,\n  params,\n  data,\n  pageContext,\n  title,\n  description,\n  children,\n}) => {\n  return (\n    <Seo\n      title={title || pageContext.title}\n      description={description}\n      data={data}\n    >\n      {children}\n    </Seo>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Speakerdeck from \"./speakerdeck\"\n\nconst shortcodes = { Speakerdeck }\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <MDXProvider components={shortcodes}>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Speakerdeck = props => {\n  const wrapperStyle = {\n    left: 0,\n    width: \"100%\",\n    height: 0,\n    position: \"relative\",\n    paddingBottom: props.paddingBottom || \"75.1972%\",\n  }\n  const iframeStyle = {\n    border: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n  }\n  const url = `https://speakerdeck.com/player/${props.slideId}`\n  return (\n    <div className=\"iframe-wrapper\" style={wrapperStyle}>\n      <iframe\n        title={props.title}\n        style={iframeStyle}\n        src={url}\n        allow={\"fullscreen\"}\n      ></iframe>\n    </div>\n  )\n}\n\nSpeakerdeck.propTypes = {\n  slideId: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  paddingBottom: PropTypes.string,\n}\n\nexport default Speakerdeck\n"],"names":["Head","props","React","HeaeComponent","title","data","path","location","Layout","site","buildTime","href","Link","to","Seo","description","children","metaDescription","siteMetadata","defaultTitle","name","content","social","twitter","defaultProps","params","pageContext","shortcodes","Speakerdeck","wrapperStyle","left","width","height","position","paddingBottom","url","slideId","className","style","border","src","allow","header","isRootPath","pathname","MDXProvider","components","Date","getFullYear"],"sourceRoot":""}