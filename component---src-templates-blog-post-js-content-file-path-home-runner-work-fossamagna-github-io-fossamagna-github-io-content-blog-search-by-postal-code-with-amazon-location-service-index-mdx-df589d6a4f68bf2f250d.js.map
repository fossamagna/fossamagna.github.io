{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-fossamagna-github-io-fossamagna-github-io-content-blog-search-by-postal-code-with-amazon-location-service-index-mdx-df589d6a4f68bf2f250d.js","mappings":"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","sources":["webpack://fossamagna.github.io/./content/blog/search-by-postal-code-with-amazon-location-service/index.mdx","webpack://fossamagna.github.io/./src/templates/blog-post.js","webpack://fossamagna.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    sup: \"sup\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    div: \"div\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    section: \"section\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"住所を入力するフォームでよくある、郵便番号を入力すると住所が補完される例の機能（以降は、郵便番号検索とします）を実装する必要があったのAmazon Location Serviceが使えないか調べてみました。\"), \"\\n\", React.createElement(_components.p, null, \"郵便番号検索のSaaSとして、\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-1\",\n    id: \"user-content-fnref-1\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"1\")), \"様々なサービスがありますが、AWSで環境を揃えたいなどの理由もありAmazon Location Serviceに白羽の矢が立ちました。\"), \"\\n\", React.createElement(_components.p, null, \"Amazon Location Serviceでの郵便番号検索には\", React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/location/latest/developerguide/search-place-index-geocoding.html\"\n  }, \"Geocoding\"), \"の\", React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/location-places/latest/APIReference/API_SearchPlaceIndexForText.html\"\n  }, \"SearchPlaceIndexForText\"), \"を利用します。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"placeindexの作成\"\n  }, \"PlaceIndexの作成\"), \"\\n\", React.createElement(_components.p, null, \"まず、「場所インデックス」を作成します。次のコマンドを実行すると「場所インデックス」を作成できます。\\nマネージメントコンソールから作成しても大丈夫ですが、\", React.createElement(_components.strong, null, \"データプロバイダーとして必ず\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-2\",\n    id: \"user-content-fnref-2\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"2\")), React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/jp/location/data-providers/here-technologies/\"\n  }, \"Here\"), \"を選択してください。\")), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\">$ aws location create-place-index\\n    --data-source Here <span class=\\\"token punctuation\\\">\\\\</span>\\n    <span class=\\\"token parameter variable\\\">--description</span> <span class=\\\"token string\\\">\\\"PostalCode Index\\\"</span> <span class=\\\"token punctuation\\\">\\\\</span>\\n    --index-name PostalCodePlaceIndex</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"searchplaceindexfortextで検索\"\n  }, \"SearchPlaceIndexForTextで検索\"), \"\\n\", React.createElement(_components.p, null, \"「場所インデックス」が作成できたら、早速郵便番号検索をしてみます。今回はAWS CLIを使って検索してみました。\"), \"\\n\", React.createElement(_components.p, null, \"検索は次のコマンドを実行して行います。郵便番号は\", React.createElement(_components.code, null, \"--text\"), \"オプションで指定します。\\n検索結果には日本だけを含むようにしたいので\", React.createElement(_components.code, null, \"--filter-countries JPN\"), \"オプションも指定しています。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\">$ aws location search-place-index-for-text <span class=\\\"token punctuation\\\">\\\\</span>\\n  --index-name PostalCodePlaceIndex <span class=\\\"token punctuation\\\">\\\\</span>\\n  <span class=\\\"token parameter variable\\\">--language</span> ja <span class=\\\"token punctuation\\\">\\\\</span>\\n  --filter-countries JPN <span class=\\\"token punctuation\\\">\\\\</span>\\n  <span class=\\\"token parameter variable\\\">--text</span> <span class=\\\"token operator\\\">&lt;</span>postalCode<span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"市区町村パターン\"\n  }, \"市区町村パターン\"), \"\\n\", React.createElement(_components.p, null, \"最初に、郵便番号\", React.createElement(_components.code, null, \"1010041\"), \"(\", React.createElement(_components.code, null, \"東京都千代田区神田須田町\"), \")を検索してみます\"), \"\\n\", React.createElement(_components.p, null, \"結果は、次のように\", React.createElement(_components.code, null, \"Results.Place\"), \"に\", React.createElement(_components.code, null, \"東京都千代田区神田須田町\"), \"が含まれています。\\nレスポンス内の\", React.createElement(_components.code, null, \"Place\"), \"オブジェクトの各属性が住所フィールドの補完に利用できそうです。\"), \"\\n\", React.createElement(_components.p, null, \"それぞれの見ていくと、以下のような構成になっているようです。\", React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/location-places/latest/APIReference/API_Place.html\"\n  }, \"公式ドキュメントのPlace\"), \"の記述と照らし合わせても一致します。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Label: 郵便番号を含む住所全体\"), \"\\n\", React.createElement(_components.li, null, \"Municipality: 市区町村\"), \"\\n\", React.createElement(_components.li, null, \"PostalCode: 郵便番号\"), \"\\n\", React.createElement(_components.li, null, \"Region: 都道府県\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ただ、\", React.createElement(_components.code, null, \"神田須田町\"), \"だけを持った属性はなさそうです。レスポンスの値を住所フィールドの補完に利用する際に\", React.createElement(_components.code, null, \"神田須田町\"), \"（所謂、町域名）の部分は\", React.createElement(_components.code, null, \"Label\"), \"から抽出する必要がありそうです。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"Results\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"Place\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"Country\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"JPN\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Geometry\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Point\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                        <span class=\\\"token number\\\">139.77105</span><span class=\\\"token punctuation\\\">,</span>\\n                        <span class=\\\"token number\\\">35.69593</span>\\n                    <span class=\\\"token punctuation\\\">]</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Interpolated\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Label\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"〒101-0041 東京都千代田区神田須田町\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Municipality\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"千代田区\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"PostalCode\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"101-0041\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Region\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"東京都\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"TimeZone\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Asia/Tokyo\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token property\\\">\\\"Offset\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">32400</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"Summary\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"DataSource\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Here\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"FilterCountries\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token string\\\">\\\"JPN\\\"</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Language\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ja\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"MaxResults\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"ResultBBox\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token number\\\">139.77105</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">35.69593</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">139.77105</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">35.69593</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1010041\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"郡パターン\"\n  }, \"郡パターン\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"○○郡xx町\"), \"というような住所のパターンの検索です。ここでは郵便番号\", React.createElement(_components.code, null, \"1901211\"), \"(\", React.createElement(_components.code, null, \"東京都西多摩郡瑞穂町石畑\"), \")を検索してみます。\\nコマンドは\", React.createElement(_components.code, null, \"--text\"), \"オプションに指定する郵便番号以外は直前のものと同じになるので、以降の記載は省略します。\"), \"\\n\", React.createElement(_components.p, null, \"結果は次の通りです。先程と違い\", React.createElement(_components.code, null, \"SubRegion\"), \"という属性が存在しています。値は\", React.createElement(_components.code, null, \"西多摩郡\"), \"です。\", React.createElement(_components.code, null, \"SubRegion\"), \"が\", React.createElement(_components.code, null, \"○○郡\"), \"の部分に該当するようです。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"Results\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"Place\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"Country\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"JPN\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Geometry\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Point\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                        <span class=\\\"token number\\\">139.35873</span><span class=\\\"token punctuation\\\">,</span>\\n                        <span class=\\\"token number\\\">35.76639</span>\\n                    <span class=\\\"token punctuation\\\">]</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Interpolated\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Label\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"〒190-1211 東京都西多摩郡瑞穂町石畑\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Municipality\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"瑞穂町\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"PostalCode\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"190-1211\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Region\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"東京都\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"SubRegion\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"西多摩郡\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"TimeZone\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Asia/Tokyo\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token property\\\">\\\"Offset\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">32400</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"Summary\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"DataSource\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Here\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"FilterCountries\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token string\\\">\\\"JPN\\\"</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Language\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ja\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"MaxResults\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"ResultBBox\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token number\\\">139.35873</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">35.76639</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">139.35873</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">35.76639</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1901211\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"行政区パターン\"\n  }, \"行政区パターン\"), \"\\n\", React.createElement(_components.p, null, \"次に\", React.createElement(_components.code, null, \"札幌市中央区\"), \"のような特別区以外の区（所謂、行政区）の郵便番号\", React.createElement(_components.code, null, \"0600035\"), \"(\", React.createElement(_components.code, null, \"北海道札幌市中央区北5条東\"), \")を検索してみます。\"), \"\\n\", React.createElement(_components.p, null, \"結果は次の通りです。\", React.createElement(_components.code, null, \"Neighborhood\"), \"という属性が存在しています。値は\", React.createElement(_components.code, null, \"中央区\"), \"です。、\", React.createElement(_components.code, null, \"Neighborhood\"), \"が行政区の部分に相当しそうです。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"Results\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"Place\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"Country\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"JPN\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Geometry\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Point\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                        <span class=\\\"token number\\\">141.35752</span><span class=\\\"token punctuation\\\">,</span>\\n                        <span class=\\\"token number\\\">43.06827</span>\\n                    <span class=\\\"token punctuation\\\">]</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Interpolated\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Label\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"〒060-0035 北海道札幌市中央区北5条東\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Municipality\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"札幌市\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Neighborhood\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"中央区\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"PostalCode\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"060-0035\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"Region\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"北海道\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"TimeZone\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token property\\\">\\\"Name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Asia/Tokyo\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token property\\\">\\\"Offset\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">32400</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"Summary\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"DataSource\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Here\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"FilterCountries\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token string\\\">\\\"JPN\\\"</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Language\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ja\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"MaxResults\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"ResultBBox\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token number\\\">141.35752</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">43.06827</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">141.35752</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token number\\\">43.06827</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"0600035\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ここまでの結果から、\", React.createElement(_components.code, null, \"Place\"), \"の属性と日本の住所の構成要素は以下のようマッピングできそうです。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"PostalCode: 郵便番号\"), \"\\n\", React.createElement(_components.li, null, \"Region: 都道府県\"), \"\\n\", React.createElement(_components.li, null, \"SubRegion: 郡\"), \"\\n\", React.createElement(_components.li, null, \"Municipality: 市区町村\"), \"\\n\", React.createElement(_components.li, null, \"Neighborhood: 行政区(特別区除く)\"), \"\\n\", React.createElement(_components.li, null, \"Label: 郵便番号を含む住所全体\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"また、それぞれの属性値を結合するような場合は、住所文字列をとしても上記の順番でよさそうです。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"その他のパターン\"\n  }, \"その他のパターン\"), \"\\n\", React.createElement(_components.p, null, \"さらに、もう少し別のパターンも検索してみます。\"), \"\\n\", React.createElement(_components.p, null, \"個別の郵便番号が設定されている高層ビルのパターンはどうでしょう。郵便番号\", React.createElement(_components.code, null, \"1006001\"), \"(\", React.createElement(_components.code, null, \"東京都千代田区霞が関霞が関ビル（１階）\"), \")を検索してみます。\\n結果は次の通りです。結果は0件です。すべての検証したわけではありませんが高層ビルなどの建物の階毎に割り振られた郵便番号では検索できないようです。\\nこの他にも、\", React.createElement(_components.code, null, \"1001701\"), \"(\", React.createElement(_components.code, null, \"東京都青ヶ島村\"), \")などいくつかの郵便番号で検索結果が0件になりました。他の離島\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-3\",\n    id: \"user-content-fnref-3\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"3\")), \"では検索できる郵便番号もあるので、離島だから必ず検索できないわけではないようです。検索できるかできないかはデータプロバイダーが提供するデータ次第になりそうです。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"Results\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"Summary\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"DataSource\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Here\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"FilterCountries\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token string\\\">\\\"JPN\\\"</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Language\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ja\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"MaxResults\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"Text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1006001\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"まとめ\"\n  }, \"まとめ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"PlaceIndexには\", React.createElement(_components.code, null, \"Here\"), \"を使う。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Place\"), \"の属性と日本の住所のマッピングはこれ。\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"PostalCode: 郵便番号\"), \"\\n\", React.createElement(_components.li, null, \"Region: 都道府県\"), \"\\n\", React.createElement(_components.li, null, \"SubRegion: 郡\"), \"\\n\", React.createElement(_components.li, null, \"Municipality: 市区町村\"), \"\\n\", React.createElement(_components.li, null, \"Neighborhood: 行政区(特別区除く)\"), \"\\n\", React.createElement(_components.li, null, \"Label: 郵便番号を含む住所全体\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"検索できない郵便番号もある（データプロバイダーが提供するデータ次第）。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"以上から、郵便番号検索にAmazon Location Serviceを採用するかは要件次第になると思います。\\n存在する郵便番号を完全に網羅しているわけではないので、その点が重要であれば少なくとも現時点では別の方法（別のSaaS、自前でデータ管理）を採用するのが良さそうです。\\n一方、一部検索できない郵便番号があることが許容できるのであれば、AWS上で郵便番号検索を簡単に実装できる選択肢になると思います。データの更新はデータプロバイダーにお任せできる点も自前データ管理と比較するとメリットになりますし、Google Mapsと比較しても料金はAWSがお得になりそうです。\"), \"\\n\", React.createElement(_components.section, {\n    \"data-footnotes\": true,\n    className: \"footnotes\"\n  }, React.createElement(_components.h2, {\n    className: \"sr-only\",\n    id: \"footnote-label\"\n  }, \"脚注\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-1\"\n  }, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developers.google.com/maps/documentation/geocoding/requests-geocoding\"\n  }, \"Google MapsのGeocofing API\"), \"や\", React.createElement(_components.a, {\n    href: \"https://kenall.jp/features/postalcode\"\n  }, \"ケンオール\"), \"などがあります。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-1\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-2\"\n  }, \"\\n\", React.createElement(_components.p, null, \"データプロバイダーとして\", React.createElement(_components.code, null, \"Here\"), \"以外に\", React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/jp/location/data-providers/esri/\"\n  }, \"Esri\"), \"もありますが、\", React.createElement(_components.code, null, \"Esri\"), \"では日本の郵便番号での検索はできませんでした(どの郵便番号でも結果が0件でした)。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-2\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-3\"\n  }, \"\\n\", React.createElement(_components.p, null, \"離島でも\", React.createElement(_components.code, null, \"9980281\"), \"(\", React.createElement(_components.code, null, \"山形県酒田市飛島\"), \")は検索結果を取得できました。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-3\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fossamagna.github.io/fossamagna.github.io/content/blog/search-by-postal-code-with-amazon-location-service/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport {Head as HeaeComponent} from \"../components/head\";\nexport const Head = ({data, ...rest}) => {\n  const post = data.mdx;\n  return React.createElement(HeaeComponent, Object.assign({\n    data: data,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }, rest));\n};\nconst BlogPostTemplate = ({data, location, children}) => {\n  const post = data.mdx;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const {previous, next} = data;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children, React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \" ← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query (\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_createMdxContent","props","_components","Object","assign","p","sup","a","h2","strong","div","code","h3","ul","li","section","ol","_provideComponents","components","React","href","id","dangerouslySetInnerHTML","__html","className","MDXLayout","wrapper","Head","data","rest","post","mdx","HeaeComponent","title","frontmatter","description","excerpt","BlogPostTemplate","location","children","siteTitle","site","siteMetadata","previous","next","Layout","itemScope","itemType","itemProp","date","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf"],"sourceRoot":""}