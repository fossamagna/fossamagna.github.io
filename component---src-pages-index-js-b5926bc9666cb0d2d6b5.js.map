{"version":3,"file":"component---src-pages-index-js-b5926bc9666cb0d2d6b5.js","mappings":"gOAMaA,EAAO,SAAAC,GAClB,OAAO,gBAAC,IAAD,iBAAmBA,EAAnB,CAA0BC,MAAM,cACxC,EA0DD,UAxDkB,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBL,QAAxB,QACZM,EAAQL,EAAKM,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQP,SAAUA,EAAUF,MAAOG,GACjC,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQD,SAAUA,EAAUF,MAAOG,GACjC,gBAAC,IAAD,MACA,sBAAIO,MAAO,CAAEC,UAAW,SACrBL,EAAMM,KAAI,SAAAC,GACT,IAAMb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYvB,KAG/B,6BAAQa,EAAKC,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAMpB,KAIR,C","sources":["webpack://fossamagna.github.io/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport { Head as HeaeComponent } from \"../components/head\"\n\nexport const Head = props => {\n  return <HeaeComponent {...props} title=\"All posts\"></HeaeComponent>\n}\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Head","props","title","data","location","siteTitle","site","siteMetadata","posts","allMdx","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}