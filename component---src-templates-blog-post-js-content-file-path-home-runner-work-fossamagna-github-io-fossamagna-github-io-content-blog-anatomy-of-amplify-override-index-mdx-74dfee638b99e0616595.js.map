{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-fossamagna-github-io-fossamagna-github-io-content-blog-anatomy-of-amplify-override-index-mdx-74dfee638b99e0616595.js","mappings":"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","sources":["webpack://fossamagna.github.io/./content/blog/anatomy-of-amplify-override/index.mdx","webpack://fossamagna.github.io/./src/templates/blog-post.js","webpack://fossamagna.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    sup: \"sup\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    div: \"div\",\n    ol: \"ol\",\n    h4: \"h4\",\n    section: \"section\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"この記事は \", React.createElement(_components.a, {\n    href: \"https://qiita.com/advent-calendar/2021/amplify\"\n  }, \"AWS Amplify Advent Calendar 2021\"), \" と \", React.createElement(_components.a, {\n    href: \"https://adventar.org/calendars/6972\"\n  }, \"ESM Advent Calendar 2021\"), \" の 20 日目の記事です。\"), \"\\n\", React.createElement(_components.p, null, \"Amplify CLI v7.3.0 で CDK オーバーライドの機能が提供されました。かなり熱い機能です。\\nAmplify の CDK オーバーライドはどうやって実装されているのかを調べたので紹介します。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"どうして-cdk-オーバーライドを調べたのか\"\n  }, \"どうして CDK オーバーライドを調べたのか\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fossamagna/amplify-category-console-notification\"\n  }, \"amplify-category-console-notification\"), React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-1\",\n    id: \"user-content-fnref-1\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"1\")), \"という amplfy プラグインを公開しているですが、\\nそのプラグインでも\", React.createElement(_components.code, null, \"amplify console-notification override\"), \"のように利用者が設定を上書きできる機能を提供したいというのが動機です。\\nそのため、CDK オーバーライドを実装するにはどうすればいいのか？を把握することを目的に実装がどうなっているのかを紹介します。\\nなお、この記事では\", React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/releases/tag/v7.6.3\"\n  }, \"amplify cli v7.6.3\"), \"を対象に調べています。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"オーバーライドとは\"\n  }, \"オーバーライドとは\"), \"\\n\", React.createElement(_components.p, null, \"そもそも、「Amplify CDK オーバーライドとは何か」ですが、Amplify が生成するバックエンドリソース（の一部）を CDK でカスタマイズできる機能です。今までは生成された CloudFormation テンプレートの JSON ファイルを直接編集してカスタマイズしていたのを CDK を利用してカスタマイズできるようになったというものです。\\n詳しくは\", React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/jp/blogs/news/override-amplify-generated-backend-resources-using-cdk/\"\n  }, \"Amplify で生成されたバックエンドリソースを CDK でカスタマイズする新機能 「オーバーライド」のご紹介\"), \"という Amazon Web Services ブログの記事を読んでいただくと一通り把握できると思います。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"どうなってる\"\n  }, \"どうなってる？\"), \"\\n\", React.createElement(_components.p, null, \"次の 2 点がどうなっているかを調べるとサードパーティプラグインで CDK オーバーライドを提供（実装）できるのではないかと考えました。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"amplify override\"), \" はどう実装されているか\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"amplify push\"), \" でカテゴリープラグインのどの API が呼び出されているのか(カテゴリープラグインはどの API を実装すればいいのか)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"そこで、この 2 点についてどう実装されているのか見ていきます。\\namplify では overide は\", React.createElement(_components.code, null, \"auth\"), \", \", React.createElement(_components.code, null, \"storage\"), \", \", React.createElement(_components.code, null, \"api\"), \"のカテゴリーで提供されていますが、ここでは\", React.createElement(_components.code, null, \"storage\"), \"カテゴリーに絞って探っていきたいと思います。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"amplify-category-override-の実装を見る\"\n  }, React.createElement(_components.code, null, \"amplify category override\"), \" の実装を見る\"), \"\\n\", React.createElement(_components.p, null, \"オーバーライドを利用するにはまず次のコマンドを実行します。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">$ amplify storage override</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"このコマンドを実行すると、\", React.createElement(_components.code, null, \"storage\"), \"カテゴリーのどのリソースをオーバーライドするのかユーザーに問い合わせてから、以下のコードが呼び出されます。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/dacdff9136a385ca99797fffb45e810d8f378568/packages/amplify-category-storage/src/commands/storage/override.ts#L58-L83\"\n  }, \"amplify-category-storage/src/commands/storage/override.ts#L58-L83\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token comment\\\">// Make sure to migrate first</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>amplifyMeta<span class=\\\"token punctuation\\\">[</span>AmplifyCategories<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">STORAGE</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>selectedResourceName<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>service <span class=\\\"token operator\\\">===</span> AmplifySupportedService<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DYNAMODB</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> resourceInputState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DynamoDBInputState</span><span class=\\\"token punctuation\\\">(</span>selectedResourceName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>resourceInputState<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cliInputFileExists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">await</span> prompter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">yesOrNo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">getMigrateResourceMessageForOverride</span><span class=\\\"token punctuation\\\">(</span>AmplifyCategories<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">STORAGE</span><span class=\\\"token punctuation\\\">,</span> selectedResourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        resourceInputState<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">migrate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> stackGenerator <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DDBStackTransform</span><span class=\\\"token punctuation\\\">(</span>selectedResourceName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">await</span> stackGenerator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>amplifyMeta<span class=\\\"token punctuation\\\">[</span>AmplifyCategories<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">STORAGE</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>selectedResourceName<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>service <span class=\\\"token operator\\\">===</span> AmplifySupportedService<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">S3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> s3ResourceInputState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">S3InputState</span><span class=\\\"token punctuation\\\">(</span>selectedResourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>s3ResourceInputState<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cliInputFileExists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">await</span> prompter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">yesOrNo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">getMigrateResourceMessageForOverride</span><span class=\\\"token punctuation\\\">(</span>AmplifyCategories<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">STORAGE</span><span class=\\\"token punctuation\\\">,</span> selectedResourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">await</span> s3ResourceInputState<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">migrate</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//migrate auth and storage config resources</span>\\n        <span class=\\\"token keyword\\\">const</span> stackGenerator <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">AmplifyS3ResourceStackTransform</span><span class=\\\"token punctuation\\\">(</span>selectedResourceName<span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        stackGenerator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span>CLISubCommandType<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">MIGRATE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">generateOverrideSkeleton</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> srcPath<span class=\\\"token punctuation\\\">,</span> destPath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"何をしているのか確認してみます。\\nストレージの種類が DynamoDB か S3 かで分岐していますが、どちらも同じような処理を行っているので、DynamoDB の方を見てみます。\"), \"\\n\", React.createElement(_components.p, null, \"やっていることは次の処理です。\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"マイグレーションが必要かをチェックします。\"), \"\\n\", React.createElement(_components.li, null, \"ファイルがなければユーザに問い合わせた後にマイグレーションを実行します。\"), \"\\n\", React.createElement(_components.li, null, \"マイグレーションで生成したファイルをもとに CDK スタックから Cfn テンプレートを作成します。\"), \"\\n\", React.createElement(_components.li, null, \"最後に\", React.createElement(_components.code, null, \"generateOverrideSkeleton\"), \"関数を実行します。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"マイグレーションの必要性のチェック、マイグレーションの実行は\", React.createElement(_components.code, null, \"DynamoDBInputState\"), React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-2\",\n    id: \"user-content-fnref-2\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"2\")), \"というクラスに実装されています。\\nマイグレーションが必要かのチェックですが、\", React.createElement(_components.code, null, \"cliInputFileExists\"), \"関数がその役割です。\", React.createElement(_components.code, null, \"cli-input.json\"), React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-3\",\n    id: \"user-content-fnref-3\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"3\")), \"ファイルの有無でマイグレーションが必要であるか判断しています。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/dacdff9136a385ca99797fffb45e810d8f378568/packages/amplify-category-storage/src/provider-utils/awscloudformation/service-walkthroughs/dynamoDB-input-state.ts#L47-L49\"\n  }, \"amplify-category-storage/src/provider-utils/awscloudformation/service-walkthroughs/dynamoDB-input-state.ts#L47-L49\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">cliInputFileExists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cliInputsFilePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"マイグレーションは\", React.createElement(_components.code, null, \"migrate\"), \"関数に実装されています。マイグレーションでは既存の\", React.createElement(_components.code, null, \"parameters.json\"), \",Cfn テンプレートファイル,\", React.createElement(_components.code, null, \"storage-params.json\"), \"を読み込んで\", React.createElement(_components.code, null, \"cli-input.json\"), \"を作成します。\\nそして、既存のファイルを削除します。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/dacdff9136a385ca99797fffb45e810d8f378568/packages/amplify-category-storage/src/provider-utils/awscloudformation/service-walkthroughs/dynamoDB-input-state.ts#L71-L161\"\n  }, \"amplify-category-storage/src/provider-utils/awscloudformation/service-walkthroughs/dynamoDB-input-state.ts#L71-L161\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">migrate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> cliInputs<span class=\\\"token operator\\\">:</span> DynamoDBCLIInputs<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// migrate the resource to new directory structure if cli-inputs.json is not found for the resource</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> backendDir <span class=\\\"token operator\\\">=</span> pathManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getBackendDirPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> oldParametersFilepath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>backendDir<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'storage'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'parameters.json'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> oldCFNFilepath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>backendDir<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'storage'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-cloudformation-template.json</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> oldStorageParamsFilepath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>backendDir<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'storage'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">storage-params.json</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> oldParameters <span class=\\\"token operator\\\">=</span> JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">readJson</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>$TSAny<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>oldParametersFilepath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> throwIfNotExist<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> oldCFN <span class=\\\"token operator\\\">=</span> JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">readJson</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>$TSAny<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>oldCFNFilepath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> throwIfNotExist<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> oldStorageParams <span class=\\\"token operator\\\">=</span> JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">readJson</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>$TSAny<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>oldStorageParamsFilepath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> throwIfNotExist<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> partitionKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      fieldName<span class=\\\"token operator\\\">:</span> oldParameters<span class=\\\"token punctuation\\\">.</span>partitionKeyName<span class=\\\"token punctuation\\\">,</span>\\n      fieldType<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">getFieldType</span><span class=\\\"token punctuation\\\">(</span>oldParameters<span class=\\\"token punctuation\\\">.</span>partitionKeyType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">let</span> sortKey<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldParameters<span class=\\\"token punctuation\\\">.</span>sortKeyName<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      sortKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        fieldName<span class=\\\"token operator\\\">:</span> oldParameters<span class=\\\"token punctuation\\\">.</span>sortKeyName<span class=\\\"token punctuation\\\">,</span>\\n        fieldType<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">getFieldType</span><span class=\\\"token punctuation\\\">(</span>oldParameters<span class=\\\"token punctuation\\\">.</span>sortKeyType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">let</span> triggerFunctions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldStorageParams<span class=\\\"token punctuation\\\">.</span>triggerFunctions<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      triggerFunctions <span class=\\\"token operator\\\">=</span> oldStorageParams<span class=\\\"token punctuation\\\">.</span>triggerFunctions<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getType</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>attrList<span class=\\\"token operator\\\">:</span> $TSAny<span class=\\\"token punctuation\\\">,</span> attrName<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> attrType<span class=\\\"token punctuation\\\">;</span>\\n\\n      attrList<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>attr<span class=\\\"token operator\\\">:</span> $TSAny<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>attr<span class=\\\"token punctuation\\\">.</span>AttributeName <span class=\\\"token operator\\\">===</span> attrName<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          attrType <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getFieldType</span><span class=\\\"token punctuation\\\">(</span>attr<span class=\\\"token punctuation\\\">.</span>AttributeType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">return</span> attrType<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">let</span> gsi<span class=\\\"token operator\\\">:</span> DynamoDBCLIInputsGSIType<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldCFN<span class=\\\"token operator\\\">?.</span>Resources<span class=\\\"token operator\\\">?.</span>DynamoDBTable<span class=\\\"token operator\\\">?.</span>Properties<span class=\\\"token operator\\\">?.</span>GlobalSecondaryIndexes<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      oldCFN<span class=\\\"token punctuation\\\">.</span>Resources<span class=\\\"token punctuation\\\">.</span>DynamoDBTable<span class=\\\"token punctuation\\\">.</span>Properties<span class=\\\"token punctuation\\\">.</span>GlobalSecondaryIndexes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>cfnGSIValue<span class=\\\"token operator\\\">:</span> $TSAny<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">let</span> gsiValue<span class=\\\"token operator\\\">:</span> $TSAny <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">(</span>gsiValue<span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> cfnGSIValue<span class=\\\"token punctuation\\\">.</span>IndexName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n          cfnGSIValue<span class=\\\"token punctuation\\\">.</span>KeySchema<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>keySchema<span class=\\\"token operator\\\">:</span> $TSObject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>keySchema<span class=\\\"token punctuation\\\">.</span>KeyType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'HASH'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n              gsiValue<span class=\\\"token punctuation\\\">.</span>partitionKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n                fieldName<span class=\\\"token operator\\\">:</span> keySchema<span class=\\\"token punctuation\\\">.</span>AttributeName<span class=\\\"token punctuation\\\">,</span>\\n                fieldType<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">getType</span><span class=\\\"token punctuation\\\">(</span>oldCFN<span class=\\\"token punctuation\\\">.</span>Resources<span class=\\\"token punctuation\\\">.</span>DynamoDBTable<span class=\\\"token punctuation\\\">.</span>Properties<span class=\\\"token punctuation\\\">.</span>AttributeDefinitions<span class=\\\"token punctuation\\\">,</span> keySchema<span class=\\\"token punctuation\\\">.</span>AttributeName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n              gsiValue<span class=\\\"token punctuation\\\">.</span>sortKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n                fieldName<span class=\\\"token operator\\\">:</span> keySchema<span class=\\\"token punctuation\\\">.</span>AttributeName<span class=\\\"token punctuation\\\">,</span>\\n                fieldType<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">getType</span><span class=\\\"token punctuation\\\">(</span>oldCFN<span class=\\\"token punctuation\\\">.</span>Resources<span class=\\\"token punctuation\\\">.</span>DynamoDBTable<span class=\\\"token punctuation\\\">.</span>Properties<span class=\\\"token punctuation\\\">.</span>AttributeDefinitions<span class=\\\"token punctuation\\\">,</span> keySchema<span class=\\\"token punctuation\\\">.</span>AttributeName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        gsi<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>gsiValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    cliInputs <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      resourceName<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token punctuation\\\">,</span>\\n      tableName<span class=\\\"token operator\\\">:</span> oldParameters<span class=\\\"token punctuation\\\">.</span>tableName<span class=\\\"token punctuation\\\">,</span>\\n      partitionKey<span class=\\\"token punctuation\\\">,</span>\\n      sortKey<span class=\\\"token punctuation\\\">,</span>\\n      triggerFunctions<span class=\\\"token punctuation\\\">,</span>\\n      gsi<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">saveCliInputPayload</span><span class=\\\"token punctuation\\\">(</span>cliInputs<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Remove old files</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>oldCFNFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeSync</span><span class=\\\"token punctuation\\\">(</span>oldCFNFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>oldParametersFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeSync</span><span class=\\\"token punctuation\\\">(</span>oldParametersFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>oldStorageParamsFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeSync</span><span class=\\\"token punctuation\\\">(</span>oldStorageParamsFilepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"マイグレーションを実行すると次に、\", React.createElement(_components.code, null, \"DDBStackTransform.transform()\"), \"関数を呼び出しています。\\n\", React.createElement(_components.code, null, \"transform()\"), \"関数では、\", React.createElement(_components.code, null, \"cli-input.json\"), \"から Cfn テンプレートファイル(\", React.createElement(_components.code, null, \"cloudformation.json\"), \")とパラメータファイル(\", React.createElement(_components.code, null, \"parameters.json\"), \")を生成しています。\\n\", React.createElement(_components.code, null, \"applyOverrides\"), \"関数を呼び出してユーザーがオーバーライドした内容(\", React.createElement(_components.code, null, \"override.ts\"), \")をスタックに適用する処理も実行されます。\\nただし、この時点では\", React.createElement(_components.code, null, \"override.ts\"), \"はまだ存在していないので何もオーバーライドされるものはありません。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/s3-stack-transform.ts#L60-L70\"\n  }, \"amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/s3-stack-transform.ts#L60-L70\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token keyword\\\">async</span> <span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span>commandType<span class=\\\"token operator\\\">:</span> CLISubCommandType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateCfnInputParameters</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Generate cloudformation stack from cli-inputs.json</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateStack</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Modify cloudformation files based on overrides</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">applyOverrides</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Save generated cloudformation.json and parameters.json files</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">saveBuildFiles</span><span class=\\\"token punctuation\\\">(</span>commandType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"最後に、\", React.createElement(_components.code, null, \"generateOverrideSkeleton\"), \"関数の呼び出しです。\", React.createElement(_components.code, null, \"generateOverrideSkeleton\"), \"関数はオーバーライドを利用する場合に必要な\", React.createElement(_components.code, null, \"tsconfig.json\"), \"や\", React.createElement(_components.code, null, \"override.ts\"), \"ファイルの生成してくれる関数です。\\nプラグインでオーバーライドを実装する場合も、この関数を適切な引数で呼び出せば良さそうです。\"), \"\\n\", React.createElement(_components.p, null, \"ここまで見てきた内容を踏まえると \", React.createElement(_components.code, null, \"amplify overide <category>\"), \" コマンドは実装できそうです。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"amplify-push-の実装を見る\"\n  }, React.createElement(_components.code, null, \"amplify push\"), \" の実装を見る\"), \"\\n\", React.createElement(_components.p, null, \"次に、\", React.createElement(_components.code, null, \"amplify push\"), \" を実行したときに CDK オーバーライド（\", React.createElement(_components.code, null, \"override.ts\"), \"）のコードがどのように反映されてデプロイされるのか見てみます。\\n\", React.createElement(_components.code, null, \"amplify push\"), \"を実行すると \", React.createElement(_components.code, null, \"amplify-cli/src/extensions/amplify-helpers/push-resources.ts\"), \" の \", React.createElement(_components.code, null, \"pushResource\"), \"関数が呼び出されます。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"overridetsのビルドと-cfn-テンプレートファイル生成\"\n  }, React.createElement(_components.code, null, \"override.ts\"), \"のビルドと Cfn テンプレートファイル生成\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pushResource\"), \"関数の中に以下のコードがあり、\", React.createElement(_components.code, null, \"context.amplify.executeProviderUtils(context, 'awscloudformation', 'buildOverrides', {...})\"), \"を呼び出しています。\\nここで Cfn テンプレートが生成されているようです。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-cli/src/extensions/amplify-helpers/push-resources.ts#L57-L63\"\n  }, \"amplify-cli/src/extensions/amplify-helpers/push-resources.ts#L57-L63\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token comment\\\">// building all CFN stacks here to get the resource Changes</span>\\n  <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">generateDependentResourcesType</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> resourcesToBuild<span class=\\\"token operator\\\">:</span> IAmplifyResource<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">getResources</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">await</span> context<span class=\\\"token punctuation\\\">.</span>amplify<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">executeProviderUtils</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'awscloudformation'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'buildOverrides'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n    resourcesToBuild<span class=\\\"token punctuation\\\">,</span>\\n    forceCompile<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"context.amplify.executeProviderUtils(context, 'awscloudformation', 'buildOverrides', {...})\"), \"を呼び出すと以下に示す関数が順次呼び出されていきます。\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-provider-awscloudformation/src/utility-functions.js#L66-L75\"\n  }, \"amplify-provider-awscloudformation/src/utility-functions.js#L66-L75\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token comment\\\">/**\\n   * Utility function to build resource CFN with overrides\\n   * Resources to build are passed with options\\n   */</span>\\n  <span class=\\\"token function-variable function\\\">buildOverrides</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">const</span> resource <span class=\\\"token keyword\\\">of</span> options<span class=\\\"token punctuation\\\">.</span>resourcesToBuild<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformResourceWithOverrides</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> resource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformResourceWithOverrides</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ここでリソース毎に\", React.createElement(_components.code, null, \"transformResourceWithOverrides\"), \"関数を呼び出しています。\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-provider-awscloudformation/src/override-manager/transform-resource.ts#L16-L66\"\n  }, \"amplify-provider-awscloudformation/src/override-manager/transform-resource.ts#L16-L66\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">transformResourceWithOverrides</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token operator\\\">:</span> $TSContext<span class=\\\"token punctuation\\\">,</span> resource<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> IAmplifyResource<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> flags <span class=\\\"token operator\\\">=</span> context<span class=\\\"token punctuation\\\">.</span>parameters<span class=\\\"token punctuation\\\">.</span>options<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">let</span> spinner<span class=\\\"token operator\\\">:</span> ora<span class=\\\"token punctuation\\\">.</span>Ora<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>resource<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> transformCategoryStack <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">@aws-amplify/amplify-category-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>resource<span class=\\\"token punctuation\\\">.</span>category<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>transformCategoryStack<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        spinner <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ora</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Building resource </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>resource<span class=\\\"token punctuation\\\">.</span>category<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>resource<span class=\\\"token punctuation\\\">.</span>resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        spinner<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformCategoryStack</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> resource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        FeatureFlags<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ensureFeatureFlag</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'project'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'overrides'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        spinner<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        printer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">info</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Overrides functionality is not implemented for this category'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// old app -> migrate project must transform -> change detected</span>\\n      <span class=\\\"token comment\\\">// new app -> just initialized project no transform -> no change detected</span>\\n      <span class=\\\"token comment\\\">// new app -> just pushed project {</span>\\n      <span class=\\\"token comment\\\">//  overrides enabled : transform -> change detected</span>\\n      <span class=\\\"token comment\\\">//  override disabled : no transform -> No change detected</span>\\n      <span class=\\\"token comment\\\">//}</span>\\n\\n      <span class=\\\"token comment\\\">// RootStack deployed to backend/awscloudformation/build</span>\\n      <span class=\\\"token keyword\\\">const</span> projectRoot <span class=\\\"token operator\\\">=</span> pathManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findProjectRoot</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">const</span> rootStackBackendBuildDir <span class=\\\"token operator\\\">=</span> pathManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getRootStackBuildDirPath</span><span class=\\\"token punctuation\\\">(</span>projectRoot<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ensureDirSync</span><span class=\\\"token punctuation\\\">(</span>rootStackBackendBuildDir<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">const</span> rootStackBackendFilePath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>rootStackBackendBuildDir<span class=\\\"token punctuation\\\">,</span> rootStackFileName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">isMigrateProject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">//old App</span>\\n        <span class=\\\"token keyword\\\">const</span> template <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformRootStack</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">prePushCfnTemplateModifier</span><span class=\\\"token punctuation\\\">(</span>template<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeJson</span><span class=\\\"token punctuation\\\">(</span>rootStackBackendFilePath<span class=\\\"token punctuation\\\">,</span> template<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">isRootOverrideFileModifiedSinceLastPush</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// new App before push</span>\\n          <span class=\\\"token keyword\\\">const</span> template <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformRootStack</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">prePushCfnTemplateModifier</span><span class=\\\"token punctuation\\\">(</span>template<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeJson</span><span class=\\\"token punctuation\\\">(</span>rootStackBackendFilePath<span class=\\\"token punctuation\\\">,</span> template<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>spinner<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      spinner<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"transformResourceWithOverrides\"), \"関数では指定されたリソースのカテゴリープラグインが実装する\", React.createElement(_components.code, null, \"transformCategoryStack\"), \"関数を呼び出しています。\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-category-storage/src/index.ts#L115-L124\"\n  }, \"amplify-category-storage/src/index.ts#L115-L124\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">transformCategoryStack</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token operator\\\">:</span> $TSContext<span class=\\\"token punctuation\\\">,</span> resource<span class=\\\"token operator\\\">:</span> IAmplifyResource<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>resource<span class=\\\"token punctuation\\\">.</span>service <span class=\\\"token operator\\\">===</span> AmplifySupportedService<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DYNAMODB</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">canResourceBeTransformed</span><span class=\\\"token punctuation\\\">(</span>resource<span class=\\\"token punctuation\\\">.</span>resourceName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> stackGenerator <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DDBStackTransform</span><span class=\\\"token punctuation\\\">(</span>resource<span class=\\\"token punctuation\\\">.</span>resourceName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">await</span> stackGenerator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>resource<span class=\\\"token punctuation\\\">.</span>service <span class=\\\"token operator\\\">===</span> AmplifySupportedService<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">S3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">transformS3ResourceStack</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> resource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"amplify-category-storage\"), \"の\", React.createElement(_components.code, null, \"transformCategoryStack\"), \"関数は DynamoDB のリソースであれば\", React.createElement(_components.code, null, \"DDBStackTransform.transform()\"), \"関数を呼び出しています。\\nこの\", React.createElement(_components.code, null, \"transform\"), \"関数はマイグレーションの処理でも呼び出されていましたね。この関数で呼びだされる\", React.createElement(_components.code, null, \"applyOverrides\"), \"関数で\", React.createElement(_components.code, null, \"override.ts\"), \"の内容でスタックを上書きしています。次で詳細を見てみましょう。\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/ddb-stack-transform.ts#L173-L215\"\n  }, \"amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/ddb-stack-transform.ts#L173-L215\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token keyword\\\">async</span> <span class=\\\"token function\\\">applyOverrides</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> backendDir <span class=\\\"token operator\\\">=</span> pathManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getBackendDirPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> resourceDirPath <span class=\\\"token operator\\\">=</span> pathManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getResourceDirectoryPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'storage'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> overrideJSFilePath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>resourceDirPath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'build'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'override.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> isBuild <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">buildOverrideDir</span><span class=\\\"token punctuation\\\">(</span>backendDir<span class=\\\"token punctuation\\\">,</span> resourceDirPath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span>error <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      printer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Build error : </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>error<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// skip if packageManager or override.ts not found</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isBuild<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> override <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span>overrideJSFilePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span>error <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        formatter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">list</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'No override File Found'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">To override </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> run amplify override auth </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> override <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> override<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> overrideCode<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readFile</span><span class=\\\"token punctuation\\\">(</span>overrideJSFilePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'utf-8'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          formatter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">list</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'No override File Found'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">To override </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> run amplify override auth</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">const</span> sandboxNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">vm</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">NodeVM</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token builtin\\\">console</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'inherit'</span><span class=\\\"token punctuation\\\">,</span>\\n          timeout<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">,</span>\\n          sandbox<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token keyword\\\">require</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            context<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'sandbox'</span><span class=\\\"token punctuation\\\">,</span>\\n            builtin<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n            external<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">await</span> sandboxNode<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span>overrideCode<span class=\\\"token punctuation\\\">,</span> overrideJSFilePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">override</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceTemplateObj <span class=\\\"token keyword\\\">as</span> AmplifyDDBResourceTemplate<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token operator\\\">:</span> $TSAny<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">const</span> error <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Skipping override due to </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>err<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>os<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">EOL</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          printer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>error<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          error<span class=\\\"token punctuation\\\">.</span>stack <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">throw</span> error<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"buildOverrideDir\"), \"関数で\", React.createElement(_components.code, null, \"override.ts\"), \"をビルドして\", React.createElement(_components.code, null, \"override.js\"), \"を出力します。ビルドされたら\", React.createElement(_components.code, null, \"new vm.NodeVM({...})\"), \"で作成した Node.js のサンドボックス環境内で\", React.createElement(_components.code, null, \"override\"), \"関数を呼び出してユーザーが定義したオーバーライドの内容をスタックに反映します。\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/ddb-stack-transform.ts#L217-L239\"\n  }, \"amplify-category-storage/src/provider-utils/awscloudformation/cdk-stack-builder/ddb-stack-transform.ts#L217-L239\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">  <span class=\\\"token function\\\">saveBuildFiles</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceTemplateObj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cfn <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceTemplateObj<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderCloudFormationTemplate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// store files in local-filesysten</span>\\n\\n    fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ensureDirSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cliInputsState<span class=\\\"token punctuation\\\">.</span>buildFilePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> cfnFilePath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cliInputsState<span class=\\\"token punctuation\\\">.</span>buildFilePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_resourceName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-cloudformation-template.json</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeJson</span><span class=\\\"token punctuation\\\">(</span>cfnFilePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cfn<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ensureDirSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cliInputsState<span class=\\\"token punctuation\\\">.</span>buildFilePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> cfnInputParamsFilePath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cliInputsState<span class=\\\"token punctuation\\\">.</span>buildFilePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'parameters.json'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      JSONUtilities<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeJson</span><span class=\\\"token punctuation\\\">(</span>cfnInputParamsFilePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_cfnInputParams<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"DDBStackTransform.transform()\"), \"関数は\", React.createElement(_components.code, null, \"applyOverrides\"), \"関数の後に\", React.createElement(_components.code, null, \"saveBuildFiles\"), \"関数を呼び出して、オーバーライドの内容を反映したスタックから Cfn のテンプレートをファイル出力します。同時に\", React.createElement(_components.code, null, \"parameters.json\"), \"も出力します。\"), \"\\n\", React.createElement(_components.p, null, \"ここまでで、\", React.createElement(_components.code, null, \"amplify push\"), \"を実行したときに\", React.createElement(_components.code, null, \"override.ts\"), \"がどうビルド・反映されて Cfn テンプレートが生成されるのか把握できました。\\nプラグインでこの仕組みを実装する場合、問題になる箇所があります。それは、以下のカテゴリープラグインが実装する\", React.createElement(_components.code, null, \"transformCategoryStack\"), \"関数を取得する部分です。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aws-amplify/amplify-cli/blob/b3ca83b9bec986f0fd525d46738b277eb93e4384/packages/amplify-provider-awscloudformation/src/override-manager/transform-resource.ts#L22\"\n  }, \"amplify-provider-awscloudformation/src/override-manager/transform-resource.ts#L22\"), \":\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> transformCategoryStack <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">@aws-amplify/amplify-category-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>resource<span class=\\\"token punctuation\\\">.</span>category<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"インポートするプラグインが\", React.createElement(_components.code, null, \"@aws-amplify/amplify-category-\"), \"で始まるものに限定されています。つまり、公式プラグインのみを対象にしています。\\n\", React.createElement(_components.code, null, \"transformCategoryStack\"), React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"関数を実装してもプラグイン側からその関数を amplify-cli 側に提供できないということです。<span role=\\\"img\\\" aria-label=\\\"crying face\\\">😢</span>\"\n    }\n  })), \"\\n\", React.createElement(_components.h3, {\n    id: \"実装に向けた活動\"\n  }, \"実装に向けた活動\"), \"\\n\", React.createElement(_components.p, null, \"このままでは、サードパーティのプラグインで Amplify CLI が提供している CDK オーバーライドと同じ仕組みに乗っかって機能提供するのは難しそうなのでの GitHub の amplify-cli リポジトリで Issue を出しました。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<a class='gatsby-remark-link-unfurl__container' href='https:&#x2F;&#x2F;github.com&#x2F;aws-amplify&#x2F;amplify-cli&#x2F;issues&#x2F;9226' target='_blank' title='Allow third-party plugins to support CDK overrides · Issue #9226 · aws-amplify&#x2F;amplify-cli'>\\n    <div class='gatsby-remark-link-unfurl__media' style='background-image: url(https:&#x2F;&#x2F;opengraph.githubassets.com&#x2F;325c757178a6fc863e3aa08b39d4911f69c62e83cb623d328aa193d9f30155d3&#x2F;aws-amplify&#x2F;amplify-cli&#x2F;issues&#x2F;9226'></div>\\n    <div class='gatsby-remark-link-unfurl__content'>\\n      <header class='gatsby-remark-link-unfurl__title'><p  title='Allow third-party plugins to support CDK overrides · Issue #9226 · aws-amplify&#x2F;amplify-cli'>Allow third-party plugins to support CDK overrides · Issue #9226 · aws-amplify&#x2F;amplify-cli</p></header>\\n      <div class='gatsby-remark-link-unfurl__description'><p title='Is this feature request related to a new or existing Amplify category? New category Is this related to another service? No response Describe the feature you&amp;#39;d like to request Now, amplify c...'>Is this feature request related to a new or existing Amplify category? New category Is this related to another service? No response Describe the feature you&amp;#39;d like to request Now, amplify c...</p></div>\\n      <footer><p title='GitHub'>GitHub</p><span title='GitHub' style='background-image: url(https:&#x2F;&#x2F;github.githubassets.com&#x2F;favicons&#x2F;favicon.svg); background-repeat: no-repeat; background-position: center center;'></span></footer>\\n    </div>\\n    </a>\\n  \"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"今後は、サードパーティのプラグインで CDK オーバーライドが実装できるように、この Issue への Pull Request も出していきたいと思います。\"), \"\\n\", React.createElement(_components.section, {\n    \"data-footnotes\": true,\n    className: \"footnotes\"\n  }, React.createElement(_components.h2, {\n    className: \"sr-only\",\n    id: \"footnote-label\"\n  }, \"脚注\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-1\"\n  }, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/dyson-udonsin/items/5d2b7105736bf8a742c4\"\n  }, \"AWS Amplify Advent Calendar 2021 16 日目の記事\"), \"で紹介いただいたプラグインです。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-1\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-2\"\n  }, \"\\n\", React.createElement(_components.p, null, \"この\", React.createElement(_components.code, null, \"DynamoDBInputState\"), \"は何かのインタフェースを実装してはいませんが、\", React.createElement(_components.code, null, \"/* Need to move this logic to a base class */\"), \" というコメントが書かれており、\\n\", React.createElement(_components.code, null, \"auth\"), \"カテゴリのソースを見ると同じような役割の\", React.createElement(_components.code, null, \"AuthInputState\"), \"クラスが\", React.createElement(_components.code, null, \"CategoryInputState\"), \"クラスを継承しています。\\nマイグレーションを実装する場合は、\", React.createElement(_components.code, null, \"CategoryInputState\"), \"クラスを継承して実装するのが良さそうです。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-2\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-3\"\n  }, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cli-input.json\"), \"について公式ドキュメントには、まだ記載はないようです。このファイルにはユーザーから入力された値を保存しておき、CDK のコードをビルドする際に利用するためのものです。 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-3\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fossamagna.github.io/fossamagna.github.io/content/blog/anatomy-of-amplify-override/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport {Head as HeaeComponent} from \"../components/head\";\nexport const Head = ({data, ...rest}) => {\n  const post = data.mdx;\n  return React.createElement(HeaeComponent, Object.assign({\n    data: data,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }, rest));\n};\nconst BlogPostTemplate = ({data, location, children}) => {\n  const post = data.mdx;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const {previous, next} = data;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children, React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \" ← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query (\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","sup","code","ul","li","h3","div","ol","h4","section","_provideComponents","components","React","href","id","dangerouslySetInnerHTML","__html","start","className","MDXLayout","wrapper","Head","data","rest","post","mdx","HeaeComponent","title","frontmatter","description","excerpt","BlogPostTemplate","location","children","siteTitle","site","siteMetadata","previous","next","Layout","itemScope","itemType","itemProp","date","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf"],"sourceRoot":""}