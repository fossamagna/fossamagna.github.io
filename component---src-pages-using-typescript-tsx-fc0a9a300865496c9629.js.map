{"version":3,"file":"component---src-pages-using-typescript-tsx-fc0a9a300865496c9629.js","mappings":"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","sources":["webpack://fossamagna.github.io/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://fossamagna.github.io/./node_modules/@mdx-js/react/lib/index.js","webpack://fossamagna.github.io/./src/pages/using-typescript.tsx","webpack://fossamagna.github.io/./src/components/seo.js","webpack://fossamagna.github.io/./src/components/head.js","webpack://fossamagna.github.io/./src/components/layout.js","webpack://fossamagna.github.io/./src/components/speakerdeck.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _defineProperty from \"/home/runner/work/fossamagna.github.io/fossamagna.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\nimport React from 'react';\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\n\nexport var MDXContext = React.createContext({});\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\n\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\n\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Memoize to avoid unnecessary top-level context changes\n\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n/** @type {Components} */\n\nvar emptyObject = {};\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\n\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Head as HeaeComponent } from \"../components/head\"\n\nexport const Head = props => {\n  return <HeaeComponent {...props} title=\"Using TypeScript\"></HeaeComponent>\n}\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Seo = ({ description, title, data, children }) => {\n  const { site } = data\n\n  const metaDescription = description || site.siteMetadata?.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{title ? `${title} | ${defaultTitle}` : defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={metaDescription} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || \"\"}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Seo from \"./seo\"\n\nexport const Head = ({\n  location,\n  params,\n  data,\n  pageContext,\n  title,\n  description,\n  children,\n}) => {\n  return (\n    <Seo\n      title={title || pageContext.title}\n      description={description}\n      data={data}\n    >\n      {children}\n    </Seo>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Speakerdeck from \"./speakerdeck\"\n\nconst shortcodes = { Speakerdeck }\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <MDXProvider components={shortcodes}>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Speakerdeck = props => {\n  const wrapperStyle = {\n    left: 0,\n    width: \"100%\",\n    height: 0,\n    position: \"relative\",\n    paddingBottom: props.paddingBottom || \"75.1972%\",\n  }\n  const iframeStyle = {\n    border: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n  }\n  const url = `https://speakerdeck.com/player/${props.slideId}`\n  return (\n    <div className=\"iframe-wrapper\" style={wrapperStyle}>\n      <iframe\n        title={props.title}\n        style={iframeStyle}\n        src={url}\n        allow={\"fullscreen\"}\n      ></iframe>\n    </div>\n  )\n}\n\nSpeakerdeck.propTypes = {\n  slideId: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  paddingBottom: PropTypes.string,\n}\n\nexport default Speakerdeck\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","_ref","children","disableParentContext","allComponents","Provider","Head","props","React","HeaeComponent","title","data","path","location","Layout","site","buildTime","href","Link","to","Seo","description","metaDescription","siteMetadata","defaultTitle","name","content","social","twitter","defaultProps","params","pageContext","shortcodes","Speakerdeck","wrapperStyle","left","width","height","position","paddingBottom","url","slideId","className","style","border","src","allow","header","isRootPath","pathname","Date","getFullYear"],"sourceRoot":""}