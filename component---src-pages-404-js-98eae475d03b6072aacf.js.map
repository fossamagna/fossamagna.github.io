{"version":3,"file":"component---src-pages-404-js-98eae475d03b6072aacf.js","mappings":"8KAUMA,EAAM,SAAC,GAA4C,IAAD,QAAzCC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/BC,EAASF,EAATE,KAEFC,EAAkBL,IAAW,UAAII,EAAKE,oBAAT,aAAI,EAAmBN,aACpDO,EAAY,UAAGH,EAAKE,oBAAR,aAAG,EAAmBL,MAExC,OACE,gCACE,6BAAQA,EAAWA,EAAN,MAAiBM,EAAiBA,GAC/C,wBAAMC,KAAK,cAAcC,QAASJ,IAClC,wBAAMG,KAAK,WAAWC,QAASR,IAC/B,wBAAMO,KAAK,iBAAiBC,QAASJ,IACrC,wBAAMG,KAAK,UAAUC,QAAQ,YAC7B,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAAL,EAAKE,oBAAL,mBAAmBI,cAAnB,eAA2BC,UAAW,KAEjD,wBAAMH,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCF,EAGN,EAEDJ,EAAIa,aAAe,CACjBZ,YAAY,IAQd,QCzCaa,EAAO,SAAC,GAQf,EAPJC,SAOI,EANJC,OAMK,IALLb,EAKI,EALJA,KACAc,EAII,EAJJA,YACAf,EAGI,EAHJA,MACAD,EAEI,EAFJA,YACAG,EACI,EADJA,SAEA,OACE,gBAAC,EAAD,CACEF,MAAOA,GAASe,EAAYf,MAC5BD,YAAaA,EACbE,KAAMA,GAELC,EAGN,C,yFChBKc,EAAa,CAAEC,YCFD,SAAAC,GAClB,IAAMC,EAAe,CACnBC,KAAM,EACNC,MAAO,OACPC,OAAQ,EACRC,SAAU,WACVC,cAAeN,EAAMM,eAAiB,YAQlCC,EAAG,kCAAqCP,EAAMQ,QACpD,OACE,uBAAKC,UAAU,iBAAiBC,MAAOT,GACrC,0BACEnB,MAAOkB,EAAMlB,MACb4B,MAXc,CAClBC,OAAQ,EACRR,MAAO,OACPC,OAAQ,OACRC,SAAU,YAQNO,IAAKL,EACLM,MAAO,eAId,GDaD,EAlCe,SAAC,GAAmC,IAG7CC,EAHYnB,EAAgC,EAAhCA,SAAUb,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAE3B+B,EADQ,MACKpB,EAASqB,SAiB5B,OAbEF,EADEC,EAEA,sBAAIN,UAAU,gBACZ,gBAAC,EAAAQ,KAAD,CAAMC,GAAG,KAAKpC,IAKhB,gBAAC,EAAAmC,KAAD,CAAMR,UAAU,mBAAmBS,GAAG,KACnCpC,GAML,gBAAC,EAAAqC,YAAD,CAAaC,WAAYtB,GACvB,uBAAKW,UAAU,iBAAiB,oBAAmBM,GACjD,0BAAQN,UAAU,iBAAiBK,GACnC,4BAAO9B,GACP,oCACK,IAAIqC,MAAOC,cADhB,mBAGE,qBAAGC,KAAK,4BAAR,YAKT,C,iGEjCY7B,EAAO,SAAAM,GAClB,OAAO,gBAAC,IAAD,iBAAmBA,EAAnB,CAA0BlB,MAAM,mBACxC,EAaD,UAXqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMY,EAAe,EAAfA,SACtB6B,EAAYzC,EAAKE,KAAKE,aAAaL,MAEzC,OACE,gBAAC,IAAD,CAAQa,SAAUA,EAAUb,MAAO0C,GACjC,4CACA,oFAGL,C","sources":["webpack://fossamagna.github.io/./src/components/seo.js","webpack://fossamagna.github.io/./src/components/head.js","webpack://fossamagna.github.io/./src/components/layout.js","webpack://fossamagna.github.io/./src/components/speakerdeck.js","webpack://fossamagna.github.io/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Seo = ({ description, title, data, children }) => {\n  const { site } = data\n\n  const metaDescription = description || site.siteMetadata?.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{title ? `${title} | ${defaultTitle}` : defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={metaDescription} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || \"\"}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Seo from \"./seo\"\n\nexport const Head = ({\n  location,\n  params,\n  data,\n  pageContext,\n  title,\n  description,\n  children,\n}) => {\n  return (\n    <Seo\n      title={title || pageContext.title}\n      description={description}\n      data={data}\n    >\n      {children}\n    </Seo>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Speakerdeck from \"./speakerdeck\"\n\nconst shortcodes = { Speakerdeck }\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <MDXProvider components={shortcodes}>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Speakerdeck = props => {\n  const wrapperStyle = {\n    left: 0,\n    width: \"100%\",\n    height: 0,\n    position: \"relative\",\n    paddingBottom: props.paddingBottom || \"75.1972%\",\n  }\n  const iframeStyle = {\n    border: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n  }\n  const url = `https://speakerdeck.com/player/${props.slideId}`\n  return (\n    <div className=\"iframe-wrapper\" style={wrapperStyle}>\n      <iframe\n        title={props.title}\n        style={iframeStyle}\n        src={url}\n        allow={\"fullscreen\"}\n      ></iframe>\n    </div>\n  )\n}\n\nSpeakerdeck.propTypes = {\n  slideId: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  paddingBottom: PropTypes.string,\n}\n\nexport default Speakerdeck\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Head as HeaeComponent } from \"../components/head\"\n\nexport const Head = props => {\n  return <HeaeComponent {...props} title=\"404: Not Found\" />\n}\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["Seo","description","title","data","children","site","metaDescription","siteMetadata","defaultTitle","name","content","social","twitter","defaultProps","Head","location","params","pageContext","shortcodes","Speakerdeck","props","wrapperStyle","left","width","height","position","paddingBottom","url","slideId","className","style","border","src","allow","header","isRootPath","pathname","Link","to","MDXProvider","components","Date","getFullYear","href","siteTitle"],"sourceRoot":""}